"""
Задание 3.

Реализовать базовый класс Worker (работник),
в котором определить публичные атрибуты name, surname, position (должность),
и защищенный атрибут income (доход). Последний атрибут должен ссылаться
на словарь, содержащий элементы: оклад и премия, например, {"wage": wage, "bonus": bonus}.

Создать класс Position (должность) на базе класса Worker. В классе Position реализовать публичные методы
получения полного имени сотрудника (get_full_name) и дохода с учетом премии (get_total_income).

Проверить работу примера на реальных данных (создать экземпляры класса Position, передать данные,
проверить значения атрибутов, вызвать методы экземпляров).

П.С. попытайтесь добить вывода информации о сотруднике также через перегрузку str
str(self) - вызывается функциями str, print и format. Возвращает строковое представление объекта.
"""

class Worker:
   
    def __init__(self, name, surname, position, wage, bonus):
        self.name = name
        self.surname = surname
        self.position = position
        self.wage = wage
        self.bonus = bonus
        self._income = {"wage": self.wage, "bonus":self.bonus}
       
class Position(Worker):

    def __init__ (self, name, surname, position, wage, bonus):
        super().__init__(name, surname, position, wage, bonus)
    
    def __str__(self):
        return f'{name} имеет доход с учетом премии {sum(self._income.values())} рублей'
        
    def get_full_name(self):
        return self.name

    def get_total_income(self):
        self._income = {"wage": self.wage, "bonus":self.bonus}
        total = sum(self._income.values())
        return total
        
name = "Петр Петрович"
surname = "Иванов"
position = "Сисадмин"
wage = 50000
bonus = 30000
    
obj = Position(name, surname, position, wage, bonus)

print(obj.name)
print(obj.surname)
print(obj.position)
print(obj.wage)
print(obj.bonus)

print(obj.get_full_name())
print(obj.get_total_income())
print(obj.__str__())  # Почему метод str надо вызывать, он же по умолчанию возвращает значение?..В task_5 мы его не вызываем, он возвращает значение по умолчанию. Я запуталась
